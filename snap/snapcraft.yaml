name: itrue-tensorflow-imx8
base: core20
version: '0.1'
summary: TensorFlow Lite for the i.MX8
description: |
  TensorFlow Lite examples for the i.MX8 MP
grade: stable
confinement: strict
architectures:
  - build-on:
      - amd64
      - arm64
    run-on: arm64

parts:
  # TensorFlow needs a newer version of protobuf than what's in 20.04
  protobuf:
    plugin: autotools
    source: https://github.com/protocolbuffers/protobuf.git
    source-branch: 3.9.x
    source-depth: 1
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
    autotools-configure-parameters:
      - "--host=${SNAPCRAFT_ARCH_TRIPLET}"
    build-packages:
      - g++
      - ccache
    prime:
      - -*

  tensorflow-lite:
    after:
      - protobuf
    plugin: nil
    source: https://source.codeaurora.org/external/imx/tensorflow-imx
    source-type: git
    source-branch: imx_5.4.70_2.3.2
    source-depth: 1
    build-packages:
      - cmake
      - g++
      - ccache
      - libjpeg-dev:${SNAPCRAFT_TARGET_ARCH}
      - ninja-build
    stage-packages:
      - libjpeg8
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
      - on arm64:
        - CROSS_COMPILE: ""
      - else:
        - CROSS_COMPILE: "${SNAPCRAFT_ARCH_TRIPLET}-"
    override-build: |
      bash tensorflow/lite/tools/make/download_dependencies.sh
      cmake tensorflow/lite \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_COMPILER=${CROSS_COMPILE}gcc \
        -DCMAKE_CXX_COMPILER=${CROSS_COMPILE}g++ \
        -DCMAKE_SYSTEM_NAME=Linux \
        -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
        -DCMAKE_CXX_FLAGS=-I${SNAPCRAFT_STAGE}/usr/local/include \
        -DCMAKE_EXE_LINKER_FLAGS=-L${SNAPCRAFT_STAGE}/usr/local/lib \
        -DTFLITE_ENABLE_RUY=ON \
        -DTFLITE_ENABLE_XNNPACK=ON \
        -DTFLITE_ENABLE_NNAPI=ON \
        -DTFLITE_BUILD_EVALTOOLS=ON \
        -B ${SNAPCRAFT_PART_BUILD}/build -G Ninja
      cmake --build ${SNAPCRAFT_PART_BUILD}/build

      for f in label_image benchmark_model coco_object_detection_run_eval imagenet_image_classification_run_eval inference_diff_run_eval; do
        install -Dm0755 ${SNAPCRAFT_PART_BUILD}/build/${f} \
          -t ${SNAPCRAFT_PART_INSTALL}/usr/bin/
      done
    prime:
      - usr/bin

  mobilenet-model:
    plugin: dump
    source: https://storage.googleapis.com/download.tensorflow.org/models/mobilenet_v1_2018_08_02/mobilenet_v1_1.0_224_quant.tgz
    source-type: tar
    organize:
      "*.tflite": usr/share/models/
    stage:
      - usr/share/models

  imx-gpu-viv:
    plugin: nil
    build-packages:
      - wget
    override-pull: |
      rm -f ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/imx-gpu-viv-6.4.3.p0.0-aarch64.bin \
        -O ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      chmod a+x ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin --auto-accept --force
    override-build: |
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/include
      cp -ar \
        ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/usr/include/* \
        ${SNAPCRAFT_PART_INSTALL}/usr/include/

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib
      cp -ar \
        ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/usr/lib/dri \
        ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/usr/lib/lib*.so* \
        ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/usr/lib/wayland/* \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/
    prime:
      - usr/lib

  nn-imx:
    after:
      - imx-gpu-viv
    plugin: make
    source: https://source.codeaurora.org/external/imx/nn-imx
    source-type: git
    source-tag: rel_imx_5.4.70_2.3.2
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
      - on arm64:
        - CC: "gcc"
        - CXX: "g++"
      - else:
        - CC: "${SNAPCRAFT_ARCH_TRIPLET}-gcc"
        - CXX: "${SNAPCRAFT_ARCH_TRIPLET}-g++"
      - CFLAGS: "-I${SNAPCRAFT_STAGE}/usr/include ${CFLAGS}"
      - CXXFLAGS: "-I${SNAPCRAFT_STAGE}/usr/include ${CXXFLAGS}"
      - LFLAGS: "-L${SNAPCRAFT_STAGE}/usr/lib"
    make-parameters:
      - SDKTARGETSYSROOT=${SNAPCRAFT_STAGE}
      - AQROOT=${SNAPCRAFT_PART_BUILD}
    override-build: |
      snapcraftctl build
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/
      cp -a ${SNAPCRAFT_PART_BUILD}/lib*.so* \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/

  tools:
    plugin: nil
    stage-packages:
      - gdb
      - strace

plugs:
  shared-memory:
    private: true
  opengl: {}

apps:
  label-image:
    command: usr/bin/label_image
  benchmark-model:
    command: usr/bin/benchmark_model
  coco-object-detection-run-eval:
    command: usr/bin/coco_object_detection_run_eval
  imagenet-image-classification-run-eval:
    command: usr/bin/imagenet_image_classification_run_eval
  inference-diff-run-eval:
    command: usr/bin/inference_diff_run_eval
